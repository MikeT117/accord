// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: oauth.sql

package sqlc

import (
	"context"
)

const createOrGetOAuth = `-- name: CreateOrGetOAuth :one
INSERT INTO oauth_accounts (email, provider, provider_token, provider_id)
VALUES ($1, $2, $3, $4)
ON CONFLICT ON CONSTRAINT oauth_accounts_provider_provider_id_key DO UPDATE SET provider_token = $3
RETURNING id, email, provider, provider_token, provider_id, created_at, updated_at
`

type CreateOrGetOAuthParams struct {
	Email         string
	Provider      string
	ProviderToken string
	ProviderID    string
}

func (q *Queries) CreateOrGetOAuth(ctx context.Context, arg CreateOrGetOAuthParams) (OauthAccount, error) {
	row := q.db.QueryRow(ctx, createOrGetOAuth,
		arg.Email,
		arg.Provider,
		arg.ProviderToken,
		arg.ProviderID,
	)
	var i OauthAccount
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Provider,
		&i.ProviderToken,
		&i.ProviderID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
