{
  "name": "accord",
  "license": "MIT",
  "description": "A sorta Discord clone",
  "private": true,
  "scripts": {
    "build-dep:common": "npm --C packages/common run build:ts",
    "build-dep:websocket-client": "npm -C packages/websocket-client run build:ts",
    "build:rest-api": "npm --C packages/rest-api run build:ts",
    "build:react-app": "npm -C apps/react-app run build:ts",
    "build:websocket-server": "npm --C packages/websocket-server run build:ts",
    "build:voice-server": "npm --C packages/voice-server run build:ts",
    "dev": "run-s build-dep:* && run-p build:* && run-p dev:* --print-label",
    "dev:rest": "npm -C packages/rest-api run dev",
    "dev:websocket": "npm -C packages/websocket-server run dev",
    "dev:voice": "npm -C packages/voice-server run dev",
    "dev:react": "npm -C apps/react-app run dev",
    "lerna:init": "npx lerna@latest init",
    "clean": "npm run clean:dirs && npm run clean:files && npm run build-clean",
    "clean:dirs": "find . -name node_modules -o -name .next -o -name .expo -type d -prune | xargs rm -rf",
    "clean:files": "find . -name package-lock.json | xargs rm -rf",
    "build-clean": "npm run build-clean:dirs && npm run build-clean:files",
    "build-clean:dirs": "find . -name build -o -name dist -type d -prune | xargs rm -rf",
    "build-clean:files": "find . -name tsconfig.tsbuildinfo | xargs rm -rf",
    "docker-build-all": "run-s build-dep:* && run-p docker:build:* --print-label",
    "docker-push-all": "run-p docker:push:* --print-label",
    "docker:build:react-app": "npm -C apps/react-app run build && docker build -t miket117/accord-react-app . -f apps/react-app/Dockerfile",
    "docker:build:rest-api": "docker build -t miket117/accord-rest-api . -f packages/rest-api/Dockerfile",
    "docker:build:websocket-server": "docker build -t miket117/accord-websocket-server . -f packages/websocket-server/Dockerfile",
    "docker:build:voice-server": "docker build -t miket117/accord-voice-server . -f packages/voice-server/Dockerfile",
    "docker-start-all": "run-p docker:start:* --print-label",
    "docker:start:react-app": "docker run --env-file apps/react-app/.env.prod --rm -it -p 3000:80 miket117/accord-react-app",
    "docker:start:rest-api": "docker run --env-file packages/rest-api/.env.prod --network=accord_network --rm -it -p 4000:4000 miket117/accord-rest-api",
    "docker:start:websocket-server": "docker run --env-file packages/websocket-server/.env.prod --network=accord_network --rm -it -p 4001:4001 miket117/accord-websocket-server",
    "docker:start:voice-server": "docker run --env-file packages/voice-server/.env.prod --network=accord_network --rm -it -p 4002:4002 -p 10000-11000:10000-11000/udp miket117/accord-voice-server",
    "docker:push:react-app": "docker push miket117/accord-react-app",
    "docker:push:rest-api": "docker push miket117/accord-rest-api",
    "docker:push:websocket-server": "docker push miket117/accord-websocket-server",
    "docker:push:voice-server": "docker push miket117/accord-voice-server"
  },
  "workspaces": [
    "packages/*",
    "apps/*"
  ],
  "devDependencies": {
    "@manypkg/cli": "^0.21.0",
    "lerna": "^7.3.1",
    "npm-run-all": "^4.1.5"
  }
}
